// GENERATED BY METAGEN

package com.rushingvise.metagen.sql;

public class QueryBuilderApi  {

    public interface ISelectTransition {
        PostSelectStep select(String... columns);
    }

    public interface IFromTransition {
        PostFromStep from(String table);
    }

    public interface IWhereTransition {
        PostWhereStep where(String expression);
    }

    public interface IGroupByTransition {
        PostGroupByStep groupBy(String column);
    }

    public interface IOrderByTransition {
        PostOrderByStep orderBy(String... columns);
    }

    public interface IOrderDirectionTransition {
        PostOrderDirectionStep asc();
        PostOrderDirectionStep desc();
    }

    public interface IBuildQueryTransformation {
        String build();
    }

    public static class InitialStep implements ISelectTransition {
        public QueryBuilderImpl.Content content;

        public InitialStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public PostSelectStep select(String... columns) {
            QueryBuilderImpl.Logic.selectTransitionSelect(content, columns);
            return new PostSelectStep(content);
        }

    }
    public static class PostSelectStep implements IFromTransition {
        public QueryBuilderImpl.Content content;

        public PostSelectStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public PostFromStep from(String table) {
            QueryBuilderImpl.Logic.fromTransitionFrom(content, table);
            return new PostFromStep(content);
        }

    }
    public static class PostFromStep implements IBuildQueryTransformation, IWhereTransition, IGroupByTransition, IOrderByTransition {
        public QueryBuilderImpl.Content content;

        public PostFromStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public String build() {
            return QueryBuilderImpl.Logic.buildQueryTransformationBuild(content);
        }

        @Override
        public PostWhereStep where(String expression) {
            QueryBuilderImpl.Logic.whereTransitionWhere(content, expression);
            return new PostWhereStep(content);
        }

        @Override
        public PostGroupByStep groupBy(String column) {
            QueryBuilderImpl.Logic.groupByTransitionGroupBy(content, column);
            return new PostGroupByStep(content);
        }

        @Override
        public PostOrderByStep orderBy(String... columns) {
            QueryBuilderImpl.Logic.orderByTransitionOrderBy(content, columns);
            return new PostOrderByStep(content);
        }

    }
    public static class PostWhereStep implements IBuildQueryTransformation, IGroupByTransition, IOrderByTransition {
        public QueryBuilderImpl.Content content;

        public PostWhereStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public String build() {
            return QueryBuilderImpl.Logic.buildQueryTransformationBuild(content);
        }

        @Override
        public PostGroupByStep groupBy(String column) {
            QueryBuilderImpl.Logic.groupByTransitionGroupBy(content, column);
            return new PostGroupByStep(content);
        }

        @Override
        public PostOrderByStep orderBy(String... columns) {
            QueryBuilderImpl.Logic.orderByTransitionOrderBy(content, columns);
            return new PostOrderByStep(content);
        }

    }
    public static class PostGroupByStep implements IBuildQueryTransformation, IOrderByTransition {
        public QueryBuilderImpl.Content content;

        public PostGroupByStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public String build() {
            return QueryBuilderImpl.Logic.buildQueryTransformationBuild(content);
        }

        @Override
        public PostOrderByStep orderBy(String... columns) {
            QueryBuilderImpl.Logic.orderByTransitionOrderBy(content, columns);
            return new PostOrderByStep(content);
        }

    }
    public static class PostOrderByStep implements IOrderDirectionTransition {
        public QueryBuilderImpl.Content content;

        public PostOrderByStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public PostOrderDirectionStep asc() {
            QueryBuilderImpl.Logic.orderDirectionTransitionAsc(content);
            return new PostOrderDirectionStep(content);
        }

        @Override
        public PostOrderDirectionStep desc() {
            QueryBuilderImpl.Logic.orderDirectionTransitionDesc(content);
            return new PostOrderDirectionStep(content);
        }

    }
    public static class PostOrderDirectionStep implements IBuildQueryTransformation {
        public QueryBuilderImpl.Content content;

        public PostOrderDirectionStep(QueryBuilderImpl.Content _content) {
            content = _content;
        }

        @Override
        public String build() {
            return QueryBuilderImpl.Logic.buildQueryTransformationBuild(content);
        }

    }
}
